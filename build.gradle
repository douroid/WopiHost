buildscript {
    ext.kotlin_version = '1.2.30'
    ext.spring_boot_version = '2.0.0.RELEASE'

    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

group 'cn.nextours'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-allopen'
apply plugin: 'org.springframework.boot'
//apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = '1.8'
[compileKotlin, compileTestKotlin]*.kotlinOptions*.freeCompilerArgs = ["-Xjsr305=strict"]

repositories {
    maven { url "https://repo.spring.io/plugins-release" }
    mavenCentral()
}

dependencies {
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"

    implementation "org.springframework.boot:spring-boot-starter-freemarker:$spring_boot_version"

    implementation 'commons-codec:commons-codec:1.11'
}

configurations {
//    implementation.exclude module: 'spring-boot-starter-tomcat'
}

processResources {
//    exclude '*.yaml'
}

allOpen {
    annotation("cn.nextours.springboot.annotation.OpenForSpringAnnotation")
}

//springBoot {
//    mainClass = 'cn.nextours.springboot.ApplicationKt'
//    layout = 'JAR'
//    executable = true
//}
